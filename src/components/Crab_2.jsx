/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Crab_2.glb --transform 
Files: Crab_2.glb [3.14MB] > C:\Users\pegaz\Downloads\Crab_2-transformed.glb [2.02MB] (35%)
*/

import React, { useEffect, useRef } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

export function Crab_2({ animation, ...props }) {
  const group = React.useRef();
  const { scene, animations } = useGLTF("/models/Crab_2.glb");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    actions[animation]?.reset().fadeIn(0.24).play();
    return () => actions?.[animation]?.fadeOut(0.24);
  }, [animation]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Crab_rig001" rotation={[0, 0, 0]}>
          <primitive object={nodes.c_pos} />
          <primitive object={nodes.root_refx} />
          <primitive object={nodes.c_foot_ikl} />
          <primitive object={nodes.c_leg_polel} />
          <primitive object={nodes.c_foot_ikr} />
          <primitive object={nodes.c_leg_poler} />
          <primitive object={nodes.c_foot_ik_dupli_001l} />
          <primitive object={nodes.c_leg_pole_dupli_001l} />
          <primitive object={nodes.c_foot_ik_dupli_001r} />
          <primitive object={nodes.c_leg_pole_dupli_001r} />
          <primitive object={nodes.c_foot_ik_dupli_002l} />
          <primitive object={nodes.c_leg_pole_dupli_002l} />
          <primitive object={nodes.c_foot_ik_dupli_002r} />
          <primitive object={nodes.c_leg_pole_dupli_002r} />
          <primitive object={nodes.c_arms_polel} />
          <primitive object={nodes.c_hand_ikl} />
          <primitive object={nodes.c_arms_poler} />
          <primitive object={nodes.c_hand_ikr} />
        </group>
        <skinnedMesh
          name="Crab_geo001"
          geometry={nodes.Crab_geo001.geometry}
          material={nodes.Crab_geo001.material}
          skeleton={nodes.Crab_geo001.skeleton}
          rotation={[0, -Math.PI / 2, 0]}
        />
        <skinnedMesh
          name="Cube"
          geometry={nodes.Cube.geometry}
          material={nodes.Cube.material}
          skeleton={nodes.Cube.skeleton}
          rotation={[0, -Math.PI / 2, 0]}
        />
        <skinnedMesh
          name="Cube001"
          geometry={nodes.Cube001.geometry}
          material={nodes.Cube001.material}
          skeleton={nodes.Cube001.skeleton}
          morphTargetDictionary={nodes.Cube001.morphTargetDictionary}
          morphTargetInfluences={nodes.Cube001.morphTargetInfluences}
          rotation={[0, -Math.PI / 2, 0]}
        />
        <skinnedMesh
          name="Cube002"
          geometry={nodes.Cube002.geometry}
          material={nodes.Cube002.material}
          skeleton={nodes.Cube002.skeleton}
          morphTargetDictionary={nodes.Cube002.morphTargetDictionary}
          morphTargetInfluences={nodes.Cube002.morphTargetInfluences}
          rotation={[0, -Math.PI / 2, 0]}
        />
        <skinnedMesh
          name="Cube003"
          geometry={nodes.Cube003.geometry}
          material={nodes.Cube003.material}
          skeleton={nodes.Cube003.skeleton}
          morphTargetDictionary={nodes.Cube003.morphTargetDictionary}
          morphTargetInfluences={nodes.Cube003.morphTargetInfluences}
          rotation={[0, -Math.PI / 2, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/Crab_2.glb");
